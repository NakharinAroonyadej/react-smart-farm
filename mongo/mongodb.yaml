apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
type: Opaque
data:
  mongo-root-username: dXNlcm5hbWU=
  mongo-root-password: cGFzc3dvcmQ=
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-iot
spec:
  accessModes:
    - ReadWriteOnce 
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1 #ระบุว่า API Version อะไร
kind: PersistentVolume #ระบุว่าเป็น Object ประเภทอะไร ในที่นี้คือ PV
metadata:
  name: pv-iot #ระบุชื่อของ PV
spec: #ส่วนนี้จะเป็นการระบุสเปคของ Volume
  capacity: 
    storage: 1Gi #ระบุพื้นที่ของ Volume นี้
  accessModes:
    - ReadWriteOnce #ระบุว่า Volume นี้มีสิทธิในการเข้าถึงอย่างไร กรณีนี้คือเราจะไม่แชร์กับ Pod อื่น
  hostPath: #ระบุ Type ของ Storage ของเราให้ใช้ Storage ของ Host หรือ Node นั่นเอง
    path: "/mnt/mypv" #ระบุ Path ของ Host 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo:4.0
        ports:
          - containerPort: 27017
        env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password 
        volumeMounts:
              - mountPath: /data/db
                name: mongodb-volume
      volumes:
        - name: mongodb-volume
          persistentVolumeClaim: 
            claimName: pvc-iot #อ้างอิง PVC ที่เราได้สร้างเอาไว้ เพื่อเรียกใช้ PV อีกทีหนึง
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  # type: LoadBalancer
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
